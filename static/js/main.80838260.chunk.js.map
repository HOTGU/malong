{"version":3,"sources":["fbase.js","routes/Auth.js","components/ProjectForm.js","components/Project.js","routes/Home.js","components/VerifyEmail.js","components/Navigator.js","routes/Completion.js","components/Router.js","components/GlobalStyles.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","auth","dbService","firestore","TitleContainer","styled","div","Title","FormContainer","InputText","input","InputSubmit","Btn","Auth","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onSubmit","event","a","preventDefault","createUserWithEmailAndPassword","newUser","user","sendEmailVerification","signInWithEmailAndPassword","message","onChange","target","name","value","type","placeholder","required","onClick","prev","FlexBox","FlexItem","ItemContainer","ItemTitle","CheckboxContainer","CheckboxLabel","label","Checkbox","TextInput","RelativeContainer","AbsoluteItem","Calendar","ToggleBtn","OnBtn","OffBtn","SubmitInput","Cancel","BtnContainer","ProjectForm","CreateProject","initValues","initCheckValues","userObj","projectObj","setEdit","setAddProject","inputs","setInputs","downPayCheck","setDownPayCheck","downPayTaxCheck","setDownTaxPayCehck","orderCheck","setOrderCheck","deliveryCheck","setDeliveryCheck","upPayCheck","setUpPayCheck","upPayTaxCheck","setUpPayTaxCheck","onDownPayToggle","onDownPayTaxToggle","onOrderToggle","onDeliveryToggle","onUpPayToggle","onUpPayTaxToggle","client","material","contents","deliveryDate","orderDeliveryDate","contract","orderCompany","downPay","upPay","downPayTaxDate","upPayTaxDate","num","toString","replace","addCommas","onCreateSubmit","collection","add","createAt","Date","now","creatorId","uid","completion","onEditSubmit","doc","id","update","checked","htmlFor","icon","faCheck","faTimes","Container","ContainerItem","Head","Client","Info","InfoItem","Line","ProjectList","props","check","ListChild","button","Project","isOwner","edit","showDetail","setShowDetail","onToggleCompletion","alert","style","marginBottom","faEyeSlash","faEye","faPencilAlt","Center","Home","addProject","projects","setProjects","moment","format","useEffect","where","orderBy","onSnapshot","snapshot","projectArray","docs","map","data","marginTop","project","Text","Button","VerifyEmail","window","location","reload","Header","ul","Item","Li","li","prop","current","SLink","Link","withRouter","pathname","history","useHistory","to","signOut","push","Completion","completeProjects","setCompleteProjects","excelData","setExcelData","completeProjectArr","excelDataArr","클라이언트","소재","발주처","콘텐츠","납품일","계약종류","계약금","계약금세금계산서","잔금","잔금세금계산서","confirm","worksheet","XLSX","utils","json_to_sheet","workbook","book_new","book_append_sheet","writeFile","AppRouter","emailVerify","isLoggedIn","exact","path","from","GlobalStyles","createGlobalStyle","reset","App","init","setInit","setIsLoggedIn","setEmailVerify","setUserObj","onAuthStateChanged","emailVerified","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.80838260.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\n","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TitleContainer = styled.div`\r\n  width: 100%;\r\n  max-width: 350px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 80px;\r\n  margin-bottom: 40px;\r\n`;\r\nconst Title = styled.div`\r\n  width: 250px;\r\n  height: 250px;\r\n  border: 10px solid #00b894;\r\n  border-radius: 100%;\r\n  font-size: 65px;\r\n  font-weight: 900;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: white;\r\n`;\r\n\r\nconst FormContainer = styled.div`\r\n  width: 100%;\r\n  max-width: 350px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\nconst InputText = styled.input`\r\n  width: 100%;\r\n  border: none;\r\n  outline: none;\r\n  padding: 15px 25px;\r\n  margin-bottom: 20px;\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  letter-spacing: 2px;\r\n  border-radius: 25px;\r\n  background-color: #00b894;\r\n  color: white;\r\n`;\r\nconst InputSubmit = styled.input`\r\n  width: 100%;\r\n  padding: 10px 20px;\r\n  margin-bottom: 20px;\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  letter-spacing: 2px;\r\n  border-radius: 25px;\r\n  border: 2px solid #00b894;\r\n  color: #00b894;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease-out;\r\n  &:hover {\r\n    background-color: white;\r\n  }\r\n`;\r\nconst Btn = styled.div`\r\n  color: #00b894;\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  text-decoration: underline;\r\n  cursor: pointer;\r\n`;\r\nconst Auth = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      if (newAccount) {\r\n        const newUser = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n        await newUser.user.sendEmailVerification();\r\n      } else {\r\n        await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  return (\r\n    <>\r\n      <TitleContainer>\r\n        <Title>마롱이</Title>\r\n      </TitleContainer>\r\n      <form onSubmit={onSubmit}>\r\n        <FormContainer>\r\n          <InputText\r\n            name=\"email\"\r\n            type=\"text\"\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n          <InputText\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n          <InputSubmit\r\n            type=\"submit\"\r\n            value={newAccount ? \"회원가입\" : \"로그인\"}\r\n            required\r\n          />\r\n          <Btn onClick={toggleAccount}>\r\n            {newAccount ? \"로그인하러 가기\" : \"회원가입하러 가기\"}\r\n          </Btn>\r\n          {error}\r\n        </FormContainer>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheck, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { dbService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst FormContainer = styled.div`\r\n  width: 100%;\r\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\r\n  background-color: white;\r\n`;\r\nconst FlexBox = styled.div`\r\n  width: inherit;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n`;\r\nconst FlexItem = styled.div`\r\n  min-width: 200px;\r\n  min-width: 100px;\r\n  padding: 10px 15px;\r\n  flex: 0 0 auto;\r\n  box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 2px 0px;\r\n`;\r\nconst ItemContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst ItemTitle = styled.div`\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  margin-bottom: 10px;\r\n`;\r\nconst CheckboxContainer = styled.div`\r\n  max-width: 200px;\r\n  font-size: 14px;\r\n`;\r\nconst CheckboxLabel = styled.label`\r\n  display: inline-block;\r\n  width: auto;\r\n  padding: 8px;\r\n  border-radius: 20px;\r\n  font-weight: 500;\r\n  margin-bottom: 5px;\r\n  border: 0.5px solid #636e72;\r\n  cursor: pointer;\r\n  &:not(:last-child) {\r\n    margin-right: 5px;\r\n  }\r\n`;\r\nconst Checkbox = styled.input`\r\n  display: none;\r\n  &:checked + ${CheckboxLabel} {\r\n    font-weight: 700;\r\n    border: 3px solid #00b894;\r\n    color: #2d3436;\r\n  }\r\n`;\r\nconst TextInput = styled.input`\r\n  width: 160px;\r\n  height: 40px;\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  outline: none;\r\n  background-color: rgba(245, 245, 245, 1);\r\n  border-width: 0 0 3px;\r\n  border-color: #00b894;\r\n  color: #2d3436;\r\n`;\r\nconst RelativeContainer = styled.div`\r\n  position: relative;\r\n`;\r\nconst AbsoluteItem = styled.div`\r\n  position: absolute;\r\n  bottom: 15px;\r\n  right: 0;\r\n`;\r\nconst Calendar = styled.input`\r\n  width: 160px;\r\n  height: 40px;\r\n  padding: 0px 5px;\r\n  background-color: white;\r\n  border: 3px solid #00b894;\r\n  color: black;\r\n  outline: none;\r\n  font-weight: 700;\r\n  font-size: 16px;\r\n  border-radius: 10px;\r\n`;\r\nconst ToggleBtn = styled.div`\r\n  cursor: pointer;\r\n  text-align: center;\r\n`;\r\nconst OnBtn = styled.div`\r\n  padding: 8px 10px;\r\n  border: 3px solid #0984e3;\r\n  border-radius: 5px;\r\n  margin-bottom: 5px;\r\n  background-color: #0984e3;\r\n  color: white;\r\n`;\r\nconst OffBtn = styled.div`\r\n  padding: 8px 10px;\r\n  border: 3px solid #d63031;\r\n  border-radius: 5px;\r\n  margin-bottom: 5px;\r\n  color: white;\r\n  background-color: #d63031;\r\n`;\r\nconst SubmitInput = styled.input`\r\n  background-color: #00b894;\r\n  outline: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 18px;\r\n  height: 40px;\r\n  width: 100px;\r\n  font-weight: 700;\r\n  color: white;\r\n  border-radius: 5px;\r\n`;\r\nconst Cancel = styled.div`\r\n  margin-left: 5px;\r\n  display: inline-block;\r\n  color: red;\r\n  height: 40px;\r\n  width: 80px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  font-weight: 700;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition: all 0.1s linear;\r\n  &:hover {\r\n    background-color: red;\r\n    color: white;\r\n    border-radius: 5px;\r\n  }\r\n`;\r\nconst BtnContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  padding: 10px;\r\n`;\r\n\r\nconst ProjectForm = ({\r\n  CreateProject,\r\n  initValues,\r\n  initCheckValues,\r\n  userObj,\r\n  projectObj,\r\n  setEdit,\r\n  setAddProject,\r\n}) => {\r\n  const [inputs, setInputs] = useState(initValues);\r\n  const [downPayCheck, setDownPayCheck] = useState(\r\n    initCheckValues.downPayCheck\r\n  );\r\n  const [downPayTaxCheck, setDownTaxPayCehck] = useState(\r\n    initCheckValues.downPayTaxCheck\r\n  );\r\n  const [orderCheck, setOrderCheck] = useState(initCheckValues.orderCheck);\r\n  const [deliveryCheck, setDeliveryCheck] = useState(\r\n    initCheckValues.deliveryCheck\r\n  );\r\n  const [upPayCheck, setUpPayCheck] = useState(initCheckValues.upPayCheck);\r\n  const [upPayTaxCheck, setUpPayTaxCheck] = useState(\r\n    initCheckValues.upPayTaxCheck\r\n  );\r\n\r\n  const onDownPayToggle = () => setDownPayCheck((prev) => !prev);\r\n  const onDownPayTaxToggle = () => setDownTaxPayCehck((prev) => !prev);\r\n  const onOrderToggle = () => setOrderCheck((prev) => !prev);\r\n  const onDeliveryToggle = () => setDeliveryCheck((prev) => !prev);\r\n  const onUpPayToggle = () => setUpPayCheck((prev) => !prev);\r\n  const onUpPayTaxToggle = () => setUpPayTaxCheck((prev) => !prev);\r\n  const {\r\n    client,\r\n    material,\r\n    contents,\r\n    deliveryDate,\r\n    orderDeliveryDate,\r\n    contract,\r\n    orderCompany,\r\n    downPay,\r\n    upPay,\r\n    downPayTaxDate,\r\n    upPayTaxDate,\r\n  } = inputs;\r\n\r\n  const addCommas = (num) =>\r\n    num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  const removeNonNumber = (num) => num.toString().replace(/[^0-9.]/g, \"\");\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value, name },\r\n    } = event;\r\n    if (name === \"downPay\" || name === \"upPay\") {\r\n      setInputs({\r\n        ...inputs,\r\n        [name]: addCommas(removeNonNumber(value)),\r\n      });\r\n    } else {\r\n      setInputs({\r\n        ...inputs,\r\n        [name]: value,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onCreateSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.collection(\"projects\").add({\r\n      client,\r\n      material,\r\n      contents,\r\n      deliveryDate,\r\n      orderDeliveryDate,\r\n      contract,\r\n      downPay,\r\n      downPayCheck,\r\n      downPayTaxCheck,\r\n      orderCheck,\r\n      orderCompany,\r\n      deliveryCheck,\r\n      upPay,\r\n      upPayCheck,\r\n      downPayTaxDate,\r\n      upPayTaxDate,\r\n      upPayTaxCheck,\r\n      createAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      completion: false,\r\n    });\r\n    setAddProject(false);\r\n  };\r\n\r\n  const onEditSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`projects/${projectObj.id}`).update({\r\n      client,\r\n      material,\r\n      contents,\r\n      deliveryDate,\r\n      orderDeliveryDate,\r\n      contract,\r\n      downPay,\r\n      downPayCheck,\r\n      downPayTaxCheck,\r\n      orderCheck,\r\n      orderCompany,\r\n      deliveryCheck,\r\n      upPay,\r\n      upPayCheck,\r\n      downPayTaxDate,\r\n      upPayTaxDate,\r\n      upPayTaxCheck,\r\n    });\r\n    setEdit(false);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={CreateProject ? onCreateSubmit : onEditSubmit}>\r\n      <FormContainer>\r\n        <FlexBox>\r\n          <FlexItem>\r\n            <ItemContainer>\r\n              <ItemTitle>클라이언트</ItemTitle>\r\n              <TextInput\r\n                onChange={onChange}\r\n                value={client}\r\n                name=\"client\"\r\n                type=\"text\"\r\n                placeholder=\"기업명\"\r\n                required\r\n              />\r\n            </ItemContainer>\r\n          </FlexItem>\r\n          <FlexItem>\r\n            <ItemContainer>\r\n              <ItemTitle>소재</ItemTitle>\r\n              <CheckboxContainer>\r\n                <Checkbox\r\n                  type=\"radio\"\r\n                  name=\"material\"\r\n                  value=\"스티로폼\"\r\n                  id=\"스티로폼\"\r\n                  checked={material === \"스티로폼\"}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n                <CheckboxLabel htmlFor=\"스티로폼\">스티로폼</CheckboxLabel>\r\n                <Checkbox\r\n                  type=\"radio\"\r\n                  name=\"material\"\r\n                  value=\"FRP\"\r\n                  id=\"FRP\"\r\n                  checked={material === \"FRP\"}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n                <CheckboxLabel htmlFor=\"FRP\">FRP</CheckboxLabel>\r\n                <Checkbox\r\n                  type=\"radio\"\r\n                  name=\"material\"\r\n                  value=\"EPS\"\r\n                  id=\"EPS\"\r\n                  checked={material === \"EPS\"}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n                <CheckboxLabel htmlFor=\"EPS\">EPS</CheckboxLabel>\r\n                <Checkbox\r\n                  type=\"radio\"\r\n                  name=\"material\"\r\n                  value=\"금속가공\"\r\n                  id=\"금속가공\"\r\n                  checked={material === \"금속가공\"}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n                <CheckboxLabel htmlFor=\"금속가공\">금속가공</CheckboxLabel>\r\n                <Checkbox\r\n                  type=\"radio\"\r\n                  name=\"material\"\r\n                  value=\"브론즈\"\r\n                  id=\"브론즈\"\r\n                  checked={material === \"브론즈\"}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n                <CheckboxLabel htmlFor=\"브론즈\">브론즈</CheckboxLabel>\r\n                <Checkbox\r\n                  type=\"radio\"\r\n                  name=\"material\"\r\n                  value=\"인공폭포\"\r\n                  id=\"인공폭포\"\r\n                  checked={material === \"인공폭포\"}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n                <CheckboxLabel htmlFor=\"인공폭포\">인공폭포</CheckboxLabel>\r\n                <Checkbox\r\n                  type=\"radio\"\r\n                  name=\"material\"\r\n                  value=\"GRC\"\r\n                  id=\"GRC\"\r\n                  checked={material === \"GRC\"}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n                <CheckboxLabel htmlFor=\"GRC\">GRC</CheckboxLabel>\r\n                <Checkbox\r\n                  type=\"radio\"\r\n                  name=\"material\"\r\n                  value=\"디자인\"\r\n                  id=\"디자인\"\r\n                  checked={material === \"디자인\"}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n                <CheckboxLabel htmlFor=\"디자인\">디자인</CheckboxLabel>\r\n              </CheckboxContainer>\r\n            </ItemContainer>\r\n          </FlexItem>\r\n          <FlexItem>\r\n            <ItemContainer>\r\n              <ItemTitle>콘텐츠</ItemTitle>\r\n              <TextInput\r\n                type=\"text\"\r\n                name=\"contents\"\r\n                onChange={onChange}\r\n                value={contents}\r\n                placeholder=\"예) 캐릭터\"\r\n                required\r\n              />\r\n            </ItemContainer>\r\n          </FlexItem>\r\n          <FlexItem>\r\n            <ItemContainer>\r\n              <ItemTitle>납품예정일</ItemTitle>\r\n              <Calendar\r\n                type=\"date\"\r\n                name=\"deliveryDate\"\r\n                value={deliveryDate}\r\n                onChange={onChange}\r\n                required\r\n              />\r\n            </ItemContainer>\r\n          </FlexItem>\r\n          <FlexItem>\r\n            <ItemContainer>\r\n              <ItemTitle>발주상 예정일</ItemTitle>\r\n              <Calendar\r\n                type=\"date\"\r\n                name=\"orderDeliveryDate\"\r\n                value={orderDeliveryDate}\r\n                onChange={onChange}\r\n                required\r\n              />\r\n            </ItemContainer>\r\n          </FlexItem>\r\n          <FlexItem>\r\n            <ItemContainer>\r\n              <ItemTitle>계약</ItemTitle>\r\n              <CheckboxContainer>\r\n                <Checkbox\r\n                  type=\"radio\"\r\n                  name=\"contract\"\r\n                  onChange={onChange}\r\n                  value=\"실물서류(등기)\"\r\n                  id=\"실물서류(등기)\"\r\n                  checked={contract === \"실물서류(등기)\"}\r\n                  required\r\n                />\r\n                <CheckboxLabel htmlFor=\"실물서류(등기)\">\r\n                  실물서류(등기)\r\n                </CheckboxLabel>\r\n                <Checkbox\r\n                  type=\"radio\"\r\n                  name=\"contract\"\r\n                  onChange={onChange}\r\n                  value=\"전자계약\"\r\n                  id=\"전자계약\"\r\n                  checked={contract === \"전자계약\"}\r\n                  required\r\n                />\r\n                <CheckboxLabel htmlFor=\"전자계약\">전자계약</CheckboxLabel>\r\n                <Checkbox\r\n                  type=\"radio\"\r\n                  name=\"contract\"\r\n                  onChange={onChange}\r\n                  value=\"제작의뢰서\"\r\n                  id=\"제작의뢰서\"\r\n                  checked={contract === \"제작의뢰서\"}\r\n                  required\r\n                />\r\n                <CheckboxLabel htmlFor=\"제작의뢰서\">제작의뢰서</CheckboxLabel>\r\n                <Checkbox\r\n                  type=\"radio\"\r\n                  name=\"contract\"\r\n                  onChange={onChange}\r\n                  value=\"개인계약\"\r\n                  id=\"개인계약\"\r\n                  checked={contract === \"개인계약\"}\r\n                  required\r\n                />\r\n                <CheckboxLabel htmlFor=\"개인계약\">개인계약</CheckboxLabel>\r\n              </CheckboxContainer>\r\n            </ItemContainer>\r\n          </FlexItem>\r\n        </FlexBox>\r\n        <FlexBox>\r\n          <FlexItem>\r\n            <ItemContainer>\r\n              <ItemTitle>계약금</ItemTitle>\r\n              {downPayCheck ? (\r\n                <>\r\n                  <ToggleBtn onClick={onDownPayToggle}>\r\n                    <OnBtn>\r\n                      <FontAwesomeIcon icon={faCheck} />\r\n                    </OnBtn>\r\n                  </ToggleBtn>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <ToggleBtn onClick={onDownPayToggle}>\r\n                    <OffBtn>\r\n                      <FontAwesomeIcon icon={faTimes} />\r\n                    </OffBtn>\r\n                  </ToggleBtn>\r\n                </>\r\n              )}\r\n              <RelativeContainer>\r\n                <TextInput\r\n                  name=\"downPay\"\r\n                  type=\"text\"\r\n                  onChange={onChange}\r\n                  value={downPay}\r\n                  placeholder=\"금액\"\r\n                />\r\n                <AbsoluteItem>원</AbsoluteItem>\r\n              </RelativeContainer>\r\n            </ItemContainer>\r\n          </FlexItem>\r\n          <FlexItem>\r\n            <ItemContainer>\r\n              <ItemTitle>계약금 세금계산서</ItemTitle>\r\n              {downPayTaxCheck ? (\r\n                <>\r\n                  <ToggleBtn onClick={onDownPayTaxToggle}>\r\n                    <OnBtn>\r\n                      <FontAwesomeIcon icon={faCheck} />\r\n                    </OnBtn>\r\n                  </ToggleBtn>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <ToggleBtn onClick={onDownPayTaxToggle}>\r\n                    <OffBtn>\r\n                      <FontAwesomeIcon icon={faTimes} />\r\n                    </OffBtn>\r\n                  </ToggleBtn>\r\n                </>\r\n              )}\r\n              <Calendar\r\n                type=\"date\"\r\n                name=\"downPayTaxDate\"\r\n                value={downPayTaxDate}\r\n                onChange={onChange}\r\n              />\r\n            </ItemContainer>\r\n          </FlexItem>\r\n          <FlexItem>\r\n            <ItemContainer>\r\n              <ItemTitle>발주</ItemTitle>\r\n              {orderCheck ? (\r\n                <>\r\n                  <ToggleBtn onClick={onOrderToggle}>\r\n                    <OnBtn>\r\n                      <FontAwesomeIcon icon={faCheck} />\r\n                    </OnBtn>\r\n                  </ToggleBtn>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <ToggleBtn onClick={onOrderToggle}>\r\n                    <OffBtn>\r\n                      <FontAwesomeIcon icon={faTimes} />\r\n                    </OffBtn>\r\n                  </ToggleBtn>\r\n                </>\r\n              )}\r\n              <TextInput\r\n                type=\"text\"\r\n                name=\"orderCompany\"\r\n                placeholder=\"발주처\"\r\n                value={orderCompany}\r\n                onChange={onChange}\r\n              />\r\n            </ItemContainer>\r\n          </FlexItem>\r\n          <FlexItem>\r\n            <ItemContainer>\r\n              <ItemTitle>납품여부</ItemTitle>\r\n              {deliveryCheck ? (\r\n                <>\r\n                  <ToggleBtn onClick={onDeliveryToggle}>\r\n                    <OnBtn>\r\n                      <FontAwesomeIcon icon={faCheck} />\r\n                    </OnBtn>\r\n                  </ToggleBtn>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <ToggleBtn onClick={onDeliveryToggle}>\r\n                    <OffBtn>\r\n                      <FontAwesomeIcon icon={faTimes} />\r\n                    </OffBtn>\r\n                  </ToggleBtn>\r\n                </>\r\n              )}\r\n            </ItemContainer>\r\n          </FlexItem>\r\n          <FlexItem>\r\n            <ItemContainer>\r\n              <ItemTitle>잔금</ItemTitle>\r\n              {upPayCheck ? (\r\n                <>\r\n                  <ToggleBtn onClick={onUpPayToggle}>\r\n                    <OnBtn>\r\n                      <FontAwesomeIcon icon={faCheck} />\r\n                    </OnBtn>\r\n                  </ToggleBtn>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <ToggleBtn onClick={onUpPayToggle}>\r\n                    <OffBtn>\r\n                      <FontAwesomeIcon icon={faTimes} />\r\n                    </OffBtn>\r\n                  </ToggleBtn>\r\n                </>\r\n              )}\r\n              <RelativeContainer>\r\n                <TextInput\r\n                  name=\"upPay\"\r\n                  type=\"text\"\r\n                  onChange={onChange}\r\n                  value={upPay}\r\n                  placeholder=\"금액\"\r\n                />\r\n                <AbsoluteItem>원</AbsoluteItem>\r\n              </RelativeContainer>\r\n            </ItemContainer>\r\n          </FlexItem>\r\n          <FlexItem>\r\n            <ItemContainer>\r\n              <ItemTitle>잔금 세금계산서</ItemTitle>\r\n              {upPayTaxCheck ? (\r\n                <>\r\n                  <ToggleBtn onClick={onUpPayTaxToggle}>\r\n                    <OnBtn>\r\n                      <FontAwesomeIcon icon={faCheck} />\r\n                    </OnBtn>\r\n                  </ToggleBtn>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <ToggleBtn onClick={onUpPayTaxToggle}>\r\n                    <OffBtn>\r\n                      <FontAwesomeIcon icon={faTimes} />\r\n                    </OffBtn>\r\n                  </ToggleBtn>\r\n                </>\r\n              )}\r\n              <Calendar\r\n                type=\"date\"\r\n                name=\"upPayTaxDate\"\r\n                value={upPayTaxDate}\r\n                onChange={onChange}\r\n              />\r\n            </ItemContainer>\r\n          </FlexItem>\r\n        </FlexBox>\r\n        <BtnContainer>\r\n          <SubmitInput\r\n            type=\"submit\"\r\n            value={CreateProject ? \"추가하기\" : \"수정하기\"}\r\n          />\r\n          <Cancel\r\n            onClick={\r\n              CreateProject ? () => setAddProject(false) : () => setEdit(false)\r\n            }\r\n          >\r\n            <div>취소</div>\r\n          </Cancel>\r\n        </BtnContainer>\r\n      </FormContainer>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ProjectForm;\r\n","import React, { useState } from \"react\";\r\nimport ProjectForm from \"./ProjectForm\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCheck,\r\n  faEye,\r\n  faEyeSlash,\r\n  faPencilAlt,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { dbService } from \"fbase\";\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  background-color: white;\r\n  color: black;\r\n  border-radius: 15px;\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  height: 100px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 20px;\r\n  margin-bottom: 10px;\r\n`;\r\nconst ContainerItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: fit-content;\r\n`;\r\nconst Head = styled.div`\r\n  width: fit-content;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n`;\r\nconst Client = styled.div`\r\n  font-size: 24px;\r\n`;\r\nconst Info = styled.div`\r\n  display: flex;\r\n  margin-top: 15px;\r\n  align-items: center;\r\n  color: #7f8c8d;\r\n`;\r\nconst InfoItem = styled.div`\r\n  font-size: 13px;\r\n`;\r\nconst Line = styled.div`\r\n  padding: 0 10px;\r\n`;\r\nconst ProjectList = styled.div`\r\n  width: fit-content;\r\n  background-color: ${(props) => (props.check ? \"#1abc9c\" : \"#ff7675\")};\r\n  color: white;\r\n  padding: 10px 15px;\r\n  font-size: 14px;\r\n  border-radius: 10px;\r\n  margin-left: 5px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst ListChild = styled.div`\r\n  margin-top: ${(props) => (props.check ? \"5px\" : 0)};\r\n`;\r\n\r\nconst BtnContainer = styled.div`\r\n  position: absolute;\r\n  top: 2px;\r\n  right: 0;\r\n  margin-right: 20px;\r\n  display: flex;\r\n`;\r\nconst Btn = styled.button`\r\n  background-color: inherit;\r\n  color: white;\r\n  border: none;\r\n  width: 25px;\r\n  height: 25px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 20px;\r\n  font-size: 16px;\r\n  transition: all 0.1s linear;\r\n  color: #00b894;\r\n  &:not(:first-child) {\r\n    margin-left: 5px;\r\n  }\r\n  &:hover {\r\n    background-color: white;\r\n    color: white;\r\n    background-color: #00b894;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Project = ({ projectObj, isOwner, userObj }) => {\r\n  const [edit, setEdit] = useState(false);\r\n  const [showDetail, setShowDetail] = useState(false);\r\n  const onToggleEdit = () => setEdit((prev) => !prev);\r\n  const onToggleDetail = () => setShowDetail((prev) => !prev);\r\n  const onToggleCompletion = async () => {\r\n    if (!projectObj.downPayCheck) {\r\n      alert(\"계약금이 아직 안들어왔네요~\");\r\n      setEdit(true);\r\n      return;\r\n    }\r\n    if (!projectObj.downPay) {\r\n      alert(\"계약금이 얼마인지 안적혀있네요~\");\r\n      setEdit(true);\r\n      return;\r\n    }\r\n    if (!projectObj.downPayTaxCheck) {\r\n      alert(\"계약금 세금계산서를 아직 안했네요~\");\r\n      setEdit(true);\r\n      return;\r\n    }\r\n    if (!projectObj.downPayTaxDate) {\r\n      alert(\"계약금 세금계산서 날짜가 언제인지 모르겠네요~\");\r\n      setEdit(true);\r\n      return;\r\n    }\r\n    if (!projectObj.orderCheck) {\r\n      alert(\"발주를 아직 안했네요~\");\r\n      setEdit(true);\r\n      return;\r\n    }\r\n    if (!projectObj.orderCompany) {\r\n      alert(\"발주처가 어딘지 모르겠네요~\");\r\n      setEdit(true);\r\n      return;\r\n    }\r\n    if (!projectObj.deliveryCheck) {\r\n      alert(\"아직 납품을 안했네요~\");\r\n      setEdit(true);\r\n      return;\r\n    }\r\n    if (!projectObj.upPayCheck) {\r\n      alert(\"잔금이 아직 안들어왔네요~\");\r\n      setEdit(true);\r\n      return;\r\n    }\r\n    if (!projectObj.upPay) {\r\n      alert(\"잔금이 얼마인지 모르겠네요~\");\r\n      setEdit(true);\r\n      return;\r\n    }\r\n    if (!projectObj.upPayTaxCheck) {\r\n      alert(\"잔금 세금계산서를 아직 안했네요~\");\r\n      setEdit(true);\r\n      return;\r\n    }\r\n    if (!projectObj.upPayTaxDate) {\r\n      alert(\"잔금 세금계산서 날짜가 언제인지 모르겠네요~\");\r\n      setEdit(true);\r\n      return;\r\n    }\r\n    await dbService.doc(`projects/${projectObj.id}`).update({\r\n      completion: true,\r\n    });\r\n  };\r\n  const initValues = {\r\n    client: projectObj.client,\r\n    material: projectObj.material,\r\n    contents: projectObj.contents,\r\n    deliveryDate: projectObj.deliveryDate,\r\n    orderDeliveryDate: projectObj.orderDeliveryDate,\r\n    contract: projectObj.contract,\r\n    orderCompany: projectObj.orderCompany,\r\n    downPay: projectObj.downPay,\r\n    upPay: projectObj.upPay,\r\n    downPayTaxDate: projectObj.downPayTaxDate,\r\n    upPayTaxDate: projectObj.upPayTaxDate,\r\n  };\r\n  const initCheckValues = {\r\n    downPayCheck: projectObj.downPayCheck,\r\n    downPayTaxCheck: projectObj.downPayTaxCheck,\r\n    orderCheck: projectObj.orderCheck,\r\n    deliveryCheck: projectObj.deliveryCheck,\r\n    upPayCheck: projectObj.upPayCheck,\r\n    upPayTaxCheck: projectObj.upPayTaxCheck,\r\n  };\r\n  return (\r\n    <div>\r\n      {edit ? (\r\n        <div style={{ marginBottom: \"10px\" }}>\r\n          <ProjectForm\r\n            CreateProject={false}\r\n            initValues={initValues}\r\n            initCheckValues={initCheckValues}\r\n            userObj={userObj}\r\n            projectObj={projectObj}\r\n            setEdit={setEdit}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <Container>\r\n          <ContainerItem>\r\n            <Client>{projectObj.client}</Client>\r\n            <Info>\r\n              <InfoItem>{projectObj.material}</InfoItem>\r\n              <Line>•</Line>\r\n              <InfoItem>{projectObj.contents}</InfoItem>\r\n              <Line>•</Line>\r\n              <InfoItem>{`납품:${projectObj.deliveryDate}`}</InfoItem>\r\n              <Line>•</Line>\r\n              <InfoItem>{`발주상:${projectObj.orderDeliveryDate}`}</InfoItem>\r\n            </Info>\r\n          </ContainerItem>\r\n          <Head>\r\n            <ProjectList check={projectObj.downPayCheck}>\r\n              <ListChild>계약금</ListChild>\r\n              {showDetail && (\r\n                <ListChild check={projectObj.downPay}>\r\n                  {projectObj.downPay ? `${projectObj.downPay}원` : \"\"}\r\n                </ListChild>\r\n              )}\r\n            </ProjectList>\r\n            <ProjectList check={projectObj.downPayTaxCheck}>\r\n              <ListChild>계약금 세금계산서</ListChild>\r\n              {showDetail && (\r\n                <ListChild check={projectObj.downPayTaxDate}>\r\n                  {projectObj.downPayTaxDate}\r\n                </ListChild>\r\n              )}\r\n            </ProjectList>\r\n            <ProjectList check={projectObj.orderCheck}>\r\n              <ListChild>발주</ListChild>\r\n              {showDetail && (\r\n                <ListChild check={projectObj.orderCompany}>\r\n                  {projectObj.orderCompany}\r\n                </ListChild>\r\n              )}\r\n            </ProjectList>\r\n            <ProjectList check={projectObj.deliveryCheck}>\r\n              <ListChild>납품</ListChild>\r\n            </ProjectList>\r\n            <ProjectList check={projectObj.upPayCheck}>\r\n              <ListChild>잔금</ListChild>\r\n              {showDetail && (\r\n                <ListChild check={projectObj.upPay}>\r\n                  {projectObj.upPay ? `${projectObj.upPay}원` : \"\"}\r\n                </ListChild>\r\n              )}\r\n            </ProjectList>\r\n            <ProjectList check={projectObj.upPayTaxCheck}>\r\n              <ListChild>잔금 세금계산서</ListChild>\r\n              {showDetail && (\r\n                <ListChild check={projectObj.upPayTaxDate}>\r\n                  {projectObj.upPayTaxDate}\r\n                </ListChild>\r\n              )}\r\n            </ProjectList>\r\n          </Head>\r\n          {isOwner && (\r\n            <BtnContainer>\r\n              <Btn onClick={onToggleDetail}>\r\n                {showDetail ? (\r\n                  <FontAwesomeIcon icon={faEyeSlash} />\r\n                ) : (\r\n                  <FontAwesomeIcon icon={faEye} />\r\n                )}\r\n              </Btn>\r\n              {!projectObj.completion && (\r\n                <>\r\n                  <Btn onClick={onToggleEdit}>\r\n                    <FontAwesomeIcon icon={faPencilAlt} />\r\n                  </Btn>\r\n                  <Btn onClick={onToggleCompletion}>\r\n                    <FontAwesomeIcon icon={faCheck} />\r\n                  </Btn>\r\n                </>\r\n              )}\r\n            </BtnContainer>\r\n          )}\r\n        </Container>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Project;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { dbService } from \"fbase\";\r\nimport Project from \"components/Project\";\r\nimport ProjectForm from \"components/ProjectForm\";\r\nimport styled from \"styled-components\";\r\nimport * as moment from \"moment\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  max-width: 1250px;\r\n  margin: 0 auto;\r\n`;\r\nconst Center = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst Btn = styled.button`\r\n  padding: 10px 20px;\r\n  border: none;\r\n  background-color: #00b894;\r\n  color: white;\r\n  cursor: pointer;\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n`;\r\nconst Home = ({ userObj }) => {\r\n  const [addProject, setAddProject] = useState(false);\r\n  const [projects, setProjects] = useState([]);\r\n\r\n  const initValues = {\r\n    client: \"\",\r\n    material: \"FRP\",\r\n    contents: \"\",\r\n    deliveryDate: moment(Date.now()).format(\"YYYY-MM-DD\"),\r\n    orderDeliveryDate: moment(Date.now()).format(\"YYYY-MM-DD\"),\r\n    contract: \"실물서류(등기)\",\r\n    orderCompany: \"\",\r\n    downPay: \"\",\r\n    upPay: \"\",\r\n    downPayTaxDate: \"\",\r\n    upPayTaxDate: \"\",\r\n  };\r\n\r\n  const initCheckValues = {\r\n    downPayCheck: false,\r\n    downPayTaxCheck: false,\r\n    orderCheck: false,\r\n    deliveryCheck: false,\r\n    upPayCheck: false,\r\n    upPayTaxCheck: false,\r\n  };\r\n\r\n  const toggeleAddProject = () => setAddProject((prev) => !prev);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      dbService\r\n        .collection(\"projects\")\r\n        .where(\"creatorId\", \"==\", userObj.uid)\r\n        .where(\"completion\", \"==\", false)\r\n        .orderBy(\"createAt\", \"desc\")\r\n        .onSnapshot((snapshot) => {\r\n          const projectArray = snapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n          }));\r\n          setProjects(projectArray);\r\n        });\r\n    } catch (error) {\r\n    } finally {\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <>\r\n        {addProject ? (\r\n          <>\r\n            <ProjectForm\r\n              CreateProject={true}\r\n              initValues={initValues}\r\n              initCheckValues={initCheckValues}\r\n              userObj={userObj}\r\n              setAddProject={setAddProject}\r\n            />\r\n          </>\r\n        ) : (\r\n          <Center>\r\n            <Btn onClick={toggeleAddProject}>프로젝트 추가</Btn>\r\n          </Center>\r\n        )}\r\n        <div style={{ marginTop: \"20px\" }}>\r\n          {projects.map((project) => (\r\n            <Project\r\n              key={project.id}\r\n              projectObj={project}\r\n              userObj={userObj}\r\n              isOwner={userObj.uid === project.creatorId}\r\n            />\r\n          ))}\r\n        </div>\r\n      </>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 150px;\r\n`;\r\nconst Text = styled.div`\r\n  font-size: 24px;\r\n  color: #00b894;\r\n`;\r\nconst Button = styled.div`\r\n  margin-top: 40px;\r\n  cursor: pointer;\r\n  font-size: 20px;\r\n  background-color: white;\r\n  padding: 15px 25px;\r\n  border-radius: 5px;\r\n  transition: all 0.15s ease-in-out;\r\n  &:hover {\r\n    background-color: #00b894;\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst VerifyEmail = () => {\r\n  const refreshClick = () => {\r\n    window.location.reload(false);\r\n  };\r\n  return (\r\n    <Container>\r\n      <Text>이메일인증을 해야 이용할 수 있습니다요.</Text>\r\n      <Button onClick={refreshClick}>이메일인증을 했습니다요.</Button>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default VerifyEmail;\r\n","import { authService } from \"fbase\";\r\nimport React from \"react\";\r\nimport { Link, useHistory, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.div`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n  font-size: 18px;\r\n`;\r\nconst Container = styled.ul`\r\n  width: 100%;\r\n  max-width: 1250px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\nconst Item = styled.ul`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst Li = styled.li`\r\n  height: 50px;\r\n  border-bottom: 4px solid\r\n    ${(prop) => (prop.current ? \"#00b894\" : \"transparent\")};\r\n  &:first-child {\r\n    margin-right: 20px;\r\n  }\r\n  transition: border-bottom 0.4s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  font-weight: 700;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst Btn = styled.div`\r\n  display: flex;\r\n  height: 50px;\r\n  align-items: center;\r\n  border: none;\r\n  cursor: pointer;\r\n  padding: 0;\r\n  margin-left: 20px;\r\n  transition: all 0.2s linear;\r\n  &:hover {\r\n    background-color: #00b894;\r\n  }\r\n`;\r\n\r\nconst Navigator = ({ location: { pathname } }) => {\r\n  const history = useHistory();\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <Header>\r\n      <Container>\r\n        <Item>\r\n          <Li current={pathname === \"/\"}>\r\n            <SLink to=\"/\">프로젝트추가</SLink>\r\n          </Li>\r\n          <Li current={pathname === \"/completion\"}>\r\n            <SLink to=\"/completion\">프로젝트완료</SLink>\r\n          </Li>\r\n        </Item>\r\n        <Li>\r\n          <Btn onClick={onLogOutClick}>로그아웃</Btn>\r\n        </Li>\r\n      </Container>\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default withRouter(Navigator);\r\n","import Project from \"components/Project\";\r\nimport { dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport * as moment from \"moment\";\r\nimport XLSX from \"xlsx\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  max-width: 1250px;\r\n  margin: 0 auto;\r\n`;\r\nconst Center = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n`;\r\nconst Btn = styled.button`\r\n  padding: 10px 20px;\r\n  border: none;\r\n  background-color: #00b894;\r\n  color: white;\r\n  cursor: pointer;\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n`;\r\n\r\nconst Completion = ({ userObj }) => {\r\n  const [completeProjects, setCompleteProjects] = useState([]);\r\n  const [excelData, setExcelData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      dbService\r\n        .collection(\"projects\")\r\n        .where(\"creatorId\", \"==\", userObj.uid)\r\n        .where(\"completion\", \"==\", true)\r\n        .orderBy(\"createAt\", \"desc\")\r\n        .onSnapshot((snapshot) => {\r\n          const completeProjectArr = snapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n          }));\r\n          const excelDataArr = snapshot.docs.map((doc) => ({\r\n            클라이언트: doc.data().client,\r\n            소재: doc.data().material,\r\n            발주처: doc.data().orderCompany,\r\n            콘텐츠: doc.data().contents,\r\n            납품일: doc.data().deliveryDate,\r\n            계약종류: doc.data().contract,\r\n            계약금: doc.data().downPay,\r\n            계약금세금계산서: doc.data().downPayTaxDate,\r\n            잔금: doc.data().upPay,\r\n            잔금세금계산서: doc.data().upPayTaxDate,\r\n          }));\r\n          setExcelData(excelDataArr);\r\n          setCompleteProjects(completeProjectArr);\r\n        });\r\n    } catch (error) {\r\n    } finally {\r\n    }\r\n  }, []);\r\n\r\n  const onExportExcel = () => {\r\n    if (window.confirm(\"엑셀로 파일을 내보내겠습니까?\")) {\r\n      const worksheet = XLSX.utils.json_to_sheet(excelData);\r\n      const workbook = XLSX.utils.book_new();\r\n      XLSX.utils.book_append_sheet(workbook, worksheet, \"test\");\r\n      XLSX.writeFile(\r\n        workbook,\r\n        `프로젝트_${moment(Date.now()).format(\"YYYY/MM/DD\")}.xlsx`\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Center>\r\n        <Btn onClick={onExportExcel}>엑셀로 파일 내보내기</Btn>\r\n      </Center>\r\n      {completeProjects.map((project) => (\r\n        <Project\r\n          key={project.id}\r\n          projectObj={project}\r\n          userObj={userObj}\r\n          isOwner={userObj.uid === project.creatorId}\r\n        />\r\n      ))}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Completion;\r\n","import React from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport VerifyEmail from \"./VerifyEmail\";\r\nimport Navigator from \"./Navigator\";\r\nimport Completion from \"routes/Completion\";\r\n\r\nconst AppRouter = ({ emailVerify, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigator userObj={userObj} />}\r\n      {isLoggedIn ? (\r\n        emailVerify ? (\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/completion\">\r\n              <Completion userObj={userObj} />\r\n            </Route>\r\n            <Redirect from=\"*\" to=\"/\" />\r\n          </Switch>\r\n        ) : (\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <VerifyEmail />\r\n            </Route>\r\n            <Redirect from=\"*\" to=\"/\" />\r\n          </Switch>\r\n        )\r\n      ) : (\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Auth />\r\n          </Route>\r\n          <Redirect from=\"*\" to=\"/\" />\r\n        </Switch>\r\n      )}\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        margin-top:70px;\r\n        font-size:16px;\r\n        background-color: rgba(20, 20, 20, 1);\r\n        color:#636e72;\r\n    }\r\n    input {\r\n        border:none;\r\n        outline:none;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyles;\r\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\nimport GlobalStyles from \"components/GlobalStyles\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [emailVerify, setEmailVerify] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        if (user.emailVerified) {\n          setEmailVerify(true);\n        } else {\n          setEmailVerify(false);\n          window.alert(\"이메일인증을 해주세요.\");\n        }\n        setUserObj(user);\n        setIsLoggedIn(true);\n        setInit(true);\n      } else {\n        setIsLoggedIn(false);\n        setInit(true);\n      }\n    });\n  }, []);\n\n  return (\n    <>\n      {init ? (\n        <>\n          <AppRouter\n            userObj={userObj}\n            emailVerify={emailVerify}\n            isLoggedIn={isLoggedIn}\n          />\n          <GlobalStyles />\n        </>\n      ) : (\n        \"로딩중...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}